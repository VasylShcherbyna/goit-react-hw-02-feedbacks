{"version":3,"sources":["components/Feedback.module.css","components/Controler/Controler.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Section/Section.js","components/Feedback/Feedback.js","App.js","index.js"],"names":["module","exports","Controler","onIncrementGood","onIncrementNeutral","onIncrementBad","className","s","good","type","onClick","neutral","bad","Statistics","pozitiv","total","statisticGood","statisticNeutral","statisticBad","statisticTotal","statisticPositive","Notification","message","Section","title","children","Feedback","useState","setGood","setNeutral","setBad","totalFeedback","positiveFeedback","Math","round","prevs","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,QAAU,0BAA0B,IAAM,sBAAsB,cAAgB,gCAAgC,iBAAmB,mCAAmC,aAAe,+BAA+B,eAAiB,iCAAiC,kBAAoB,oCAAoC,QAAU,4B,yGCsBzWC,EAnBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,mBAAoBC,EAAxC,EAAwCA,eAAxC,OAChB,gCACE,wBAAQC,UAAWC,IAAEC,KAAMC,KAAK,SAASC,QAASP,EAAlD,kBAGA,wBAAQG,UAAWC,IAAEI,QAASF,KAAK,SAASC,QAASN,EAArD,qBAGA,wBAAQE,UAAWC,IAAEK,IAAKH,KAAK,SAASC,QAASL,EAAjD,qBCWWQ,EApBI,SAAC,GAA4C,IAA1CL,EAAyC,EAAzCA,KAAMG,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,IAAKE,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACjD,OACE,gCACE,4CACA,uBAAMT,UAAWC,IAAES,cAAnB,mBAAyCR,KACzC,uBAAMF,UAAWC,IAAEU,iBAAnB,sBAA+CN,KAC/C,uBAAML,UAAWC,IAAEW,aAAnB,kBAAuCN,KACvC,uBAAMN,UAAWC,IAAEY,eAAnB,oBAA2CJ,KAC3C,oBAAGT,UAAWC,IAAEa,kBAAhB,gCAAuDN,EAAvD,WCHSO,EALM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,mBAAGhB,UAAWC,IAAEe,QAAhB,SAA0BA,KCSjDC,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,gCACE,6BAAKD,IACJC,MCkDUC,MAhDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOnB,EAAP,KAAaoB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOhB,EAAP,KAAgBkB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOf,EAAP,KAAYkB,EAAZ,KAkBMC,EAN2BvB,EAAOG,EAAUC,EAO5CoB,EAJJC,KAAKC,MAAc,IAAP1B,EAAcuB,GAM5B,OACE,8BACE,eAAC,EAAD,CAASP,MAAM,wBAAf,UACE,cAAC,EAAD,CACErB,gBAvBoB,WAC1ByB,GAAQ,SAACO,GAAD,OAAWA,EAAQ,MAuBrB/B,mBArBuB,WAC7ByB,GAAW,SAACM,GAAD,OAAWA,EAAQ,MAqBxB9B,eAnBoB,WACzByB,GAAO,SAACK,GAAD,OAAWA,EAAQ,QAoBJ,IAAlBJ,EACC,cAAC,EAAD,CAAcT,QAAQ,sBAEtB,cAAC,EAAD,CACEd,KAAMA,EACNG,QAASA,EACTC,IAAKA,EACLG,MAAOgB,EACPjB,QAASkB,UCjCNI,MAVf,WACE,OACE,qBAAK9B,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCFR+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.57360f96.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"good\":\"Feedback_good__10-_E\",\"neutral\":\"Feedback_neutral__1m6Ot\",\"bad\":\"Feedback_bad__38DNG\",\"statisticGood\":\"Feedback_statisticGood__2HTVg\",\"statisticNeutral\":\"Feedback_statisticNeutral__2sSBk\",\"statisticBad\":\"Feedback_statisticBad__3iS3B\",\"statisticTotal\":\"Feedback_statisticTotal__JEMoa\",\"statisticPositive\":\"Feedback_statisticPositive__A3WCI\",\"message\":\"Feedback_message__2Yyl_\"};","import PropTypes from \"prop-types\";\r\nimport s from \"../Feedback.module.css\";\r\nimport react from \"react\";\r\n\r\nconst Controler = ({ onIncrementGood, onIncrementNeutral, onIncrementBad }) => (\r\n  <div>\r\n    <button className={s.good} type=\"button\" onClick={onIncrementGood}>\r\n      Good\r\n    </button>\r\n    <button className={s.neutral} type=\"button\" onClick={onIncrementNeutral}>\r\n      Neutral\r\n    </button>\r\n    <button className={s.bad} type=\"button\" onClick={onIncrementBad}>\r\n      Bad\r\n    </button>\r\n  </div>\r\n);\r\n\r\nControler.propTypes = {\r\n  onIncrementGood: PropTypes.func.isRequired,\r\n  onIncrementNeutral: PropTypes.func.isRequired,\r\n  onIncrementBad: PropTypes.func.isRequired,\r\n};\r\nexport default Controler;\r\n// ---","import PropTypes from 'prop-types';\r\nimport s from \"../Feedback.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, pozitiv, total }) => {\r\n  return (\r\n    <div>\r\n      <h2>Statistics</h2>\r\n      <span className={s.statisticGood}>Good: {good}</span>\r\n      <span className={s.statisticNeutral}>Neutral: {neutral}</span>\r\n      <span className={s.statisticBad}>Bad: {bad}</span>\r\n      <span className={s.statisticTotal}>Total: {total}</span>\r\n      <p className={s.statisticPositive}>Positive Feedback: {pozitiv}%</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  pozitiv: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired\r\n};\r\nexport default Statistics;","import PropTypes from \"prop-types\";\r\nimport s from \"../Feedback.module.css\";\r\n\r\nconst Notification = ({ message }) => <p className={s.message}>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import PropTypes from \"prop-types\";\r\nconst Section = ({ title, children }) => (\r\n  <div>\r\n    <h1>{title}</h1>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\nexport default Section;\r\n","import { useState } from \"react\";\r\nimport Controler from \"../Controler/Controler\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport Section from \"../Section/Section\";\r\n\r\nfunction Feedback() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const handleIncrementGood = () => {\r\n    setGood((prevs) => prevs + 1)\r\n  };\r\n  const handleIncrementNeutral = () => {\r\n    setNeutral((prevs) => prevs + 1);\r\n  };\r\n   const handleIncrementBad = () => {\r\n     setBad((prevs) => prevs + 1);\r\n   };\r\n\r\n  const countTotalFeedback = () => good + neutral + bad;\r\n\r\n  const countPositiveFeedbackPercentage = () => \r\n    Math.round((good * 100) / totalFeedback);\r\n  \r\n\r\n  const totalFeedback = countTotalFeedback();\r\n  const positiveFeedback = countPositiveFeedbackPercentage();\r\n\r\n  return (\r\n    <div>\r\n      <Section title=\"Please leave feedback\">\r\n        <Controler\r\n          onIncrementGood={handleIncrementGood}\r\n          onIncrementNeutral={handleIncrementNeutral}\r\n          onIncrementBad={handleIncrementBad}\r\n        />\r\n        {totalFeedback === 0 ? (\r\n          <Notification message=\"No feedback given\" />\r\n        ) : (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={totalFeedback}\r\n            pozitiv={positiveFeedback}\r\n          />\r\n        )}\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feedback;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Feedback from \"./components/Feedback/Feedback\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Feedback />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}